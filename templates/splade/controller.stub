<?php

namespace [% namespace %];

[% use_command_placeholder %]

use App\Tables\[% model_name_class %]Table;

use ProtoneMedia\Splade\Facades\Splade;
use ProtoneMedia\Splade\Facades\Toast;
use Exception;


class [% controller_name %] [% controller_extends %]
{
[% constructor %]

    public function index()
    {

        $data = Splade::onLazy(fn () => [% model_name_class %]Table::class);

        return view('[% index_view_name %]', compact('data'));
    }


    public function create()
    {
        [% relation_collections %]

        return view('[% create_view_name %]'[% view_variables_for_create %]);
    }

    public function store([% type_hinted_request_name %])
    {
        try {
            [% call_affirm %]
            $[% data_variable %] = [% call_get_data %];
            [% on_store_setter %]
            [% model_name_class %]::create($[% data_variable %]);


            Toast::title([% model_was_added %]);

            return redirect()->back();

        } catch (Exception $exception) {
             Toast::title('Opps!')
                        ->message($exception->getMessage())
                        ->danger();

                      return redirect()->back();
        }
    }


    public function show($id)
    {
        $[% model_name_singular_variable %] = [% model_name_class %]::[% with_relations_for_show %]findOrFail($id);

        return view('[% show_view_name %]'[% view_variables_for_show %]);
    }


    public function edit($id)
    {
        $[% model_name_singular_variable %] = [% model_name_class %]::findOrFail($id);
        [% relation_collections %]

        return view('[% edit_view_name %]'[% view_variables_for_edit %]);
    }


    public function update($id, [% type_hinted_request_name %])
    {
        try {

            [% call_affirm %]
            $[% data_variable %] = [% call_get_data %];
            [% on_update_setter %]
            $[% model_name_singular_variable %] = [% model_name_class %]::findOrFail($id);
            $[% model_name_singular_variable %]->update($[% data_variable %]);

            Toast::title([% model_was_updated %]);

            return redirect()->back();

        } catch (Exception $exception) {

        Toast::title('Opps!')
            ->message($exception->getMessage())
            ->danger();

          return redirect()->back();
        }
    }


    public function destroy($id)
    {
        try {
            $[% model_name_singular_variable %] = [% model_name_class %]::findOrFail($id);
            $[% model_name_singular_variable %]->delete();

            Toast::title([% model_was_deleted %]);

            return redirect()->back();

        } catch (Exception $exception) {

             Toast::title('Opps!')
                        ->message($exception->getMessage())
                        ->danger();

                      return redirect()->back();

        }
    }
[% affirm_method %]
[% get_data_method %]
[% upload_method %]
}
